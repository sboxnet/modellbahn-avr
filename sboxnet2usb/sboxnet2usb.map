Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/crtm32u2.o (exit)
/usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
                              sboxnet2usb.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
                              sboxnet2usb.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(memset.o)
                              sboxnet2usb.o (memset)
/usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_byte_atmega32u2.o)
                              sboxnet2usb.o (__eerd_byte_m32u2)
/usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_word_atmega32u2.o)
                              sboxnet2usb.o (__eerd_word_m32u2)
/usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_block_atmega32u2.o)
                              sboxnet2usb.o (__eeupd_block_m32u2)
/usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_byte_atmega32u2.o)
                              sboxnet2usb.o (__eeupd_byte_m32u2)
/usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_word_atmega32u2.o)
                              sboxnet2usb.o (__eeupd_word_m32u2)
/usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_block_atmega32u2.o)
                              /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_word_atmega32u2.o) (__eerd_blraw_m32u2)

Allocating common symbols
Common symbol       size              file

g_sboxnet_addr      0x1               sboxnet2usb.o
g_sboxnet           0x233             sboxnet2usb.o
g_usb_dev           0xd               sboxnet2usb.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000010000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/crtm32u2.o
LOAD sboxnet2usb.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libm.a
LOAD /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x16c6
 *(.vectors)
 .vectors       0x0000000000000000       0x74 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/crtm32u2.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000074                . = ALIGN (0x2)
                0x0000000000000074                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000074        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000074                __trampolines_end = .
 *(.progmem*)
 .progmem.data  0x0000000000000074       0x92 sboxnet2usb.o
                0x0000000000000078                g_strings_P
                0x000000000000007e                g_string2_P
                0x0000000000000098                g_string1_P
                0x00000000000000de                g_string0_P
                0x00000000000000e2                g_config_1_P
                0x00000000000000f4                g_device_desc_P
                0x0000000000000106                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000106                __ctors_start = .
 *(.ctors)
                0x0000000000000106                __ctors_end = .
                0x0000000000000106                __dtors_start = .
 *(.dtors)
                0x0000000000000106                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000106        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/crtm32u2.o
                0x0000000000000106                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000106        0xc /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/crtm32u2.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000112       0x16 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
                0x0000000000000112                __do_copy_data
 .init4         0x0000000000000128       0x10 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
                0x0000000000000128                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 .init8         0x0000000000000138       0x14 sboxnet2usb.o
                0x0000000000000138                stack_init8
 *(.init8)
 *(.init9)
 .init9         0x000000000000014c        0x8 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/crtm32u2.o
 *(.init9)
 *(.text)
 .text          0x0000000000000154        0x4 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/crtm32u2.o
                0x0000000000000154                __vector_22
                0x0000000000000154                __vector_28
                0x0000000000000154                __vector_1
                0x0000000000000154                __vector_24
                0x0000000000000154                __vector_12
                0x0000000000000154                __bad_interrupt
                0x0000000000000154                __vector_6
                0x0000000000000154                __vector_3
                0x0000000000000154                __vector_13
                0x0000000000000154                __vector_17
                0x0000000000000154                __vector_19
                0x0000000000000154                __vector_7
                0x0000000000000154                __vector_27
                0x0000000000000154                __vector_5
                0x0000000000000154                __vector_4
                0x0000000000000154                __vector_9
                0x0000000000000154                __vector_2
                0x0000000000000154                __vector_21
                0x0000000000000154                __vector_15
                0x0000000000000154                __vector_8
                0x0000000000000154                __vector_26
                0x0000000000000154                __vector_14
                0x0000000000000154                __vector_10
                0x0000000000000154                __vector_20
 .text          0x0000000000000158     0x1496 sboxnet2usb.o
                0x0000000000000436                __vector_23
                0x00000000000005e2                __vector_25
                0x0000000000000a22                __vector_16
                0x0000000000000b76                usb_ep_read_data
                0x0000000000000b8a                usb_ep_waitIN
                0x0000000000000ba2                usb_ep_send_zlp
                0x0000000000000bb4                usb_mem_read_byte
                0x0000000000000bcc                usb_ep_getbufsize
                0x0000000000000bde                usb_ep_send_in_data
                0x0000000000000c7a                usb_ep_send_control_data_chunk
                0x0000000000000d28                usb_ep_send_control_data_finish
                0x0000000000000d86                usb_ep_send_control_data
                0x0000000000000d9e                get_string
                0x0000000000000dd8                usb_ep_recv_control_data_chunk
                0x0000000000000e74                usb_ep_recv_control_data_finish
                0x0000000000000e7c                usb_ep_recv_control_data
                0x0000000000000e8a                usb_ep_setup
                0x0000000000000ede                usb_ep_setup_control
                0x0000000000000efa                usb_intr_endofreset
                0x0000000000000f0a                __vector_11
                0x0000000000000f9e                usb_init
                0x000000000000102a                usb_event_set_configuration
                0x000000000000102c                usb_event_ep0_request
                0x0000000000001366                usb_ep0_task
                0x0000000000001594                __vector_18
 .text          0x00000000000015ee        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
 .text          0x00000000000015ee        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
 .text          0x00000000000015ee        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
 .text          0x00000000000015ee        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(memset.o)
 .text          0x00000000000015ee        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_byte_atmega32u2.o)
 .text          0x00000000000015ee        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_word_atmega32u2.o)
 .text          0x00000000000015ee        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_block_atmega32u2.o)
 .text          0x00000000000015ee        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_byte_atmega32u2.o)
 .text          0x00000000000015ee        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_word_atmega32u2.o)
 .text          0x00000000000015ee        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_block_atmega32u2.o)
                0x00000000000015ee                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000015ee       0x3a sboxnet2usb.o
                0x00000000000015ee                main
 .text.libgcc.mul
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000001628        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000001628        0xe /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(memset.o)
                0x0000000000001628                memset
 .text.avr-libc
                0x0000000000001636       0x10 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_byte_atmega32u2.o)
                0x0000000000001636                __eerd_byte_m32u2
 .text.avr-libc
                0x0000000000001646        0xc /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_word_atmega32u2.o)
                0x0000000000001646                __eerd_word_m32u2
 .text.avr-libc
                0x0000000000001652       0x20 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_block_atmega32u2.o)
                0x0000000000001652                __eeupd_block_m32u2
 .text.avr-libc
                0x0000000000001672       0x24 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_byte_atmega32u2.o)
                0x0000000000001672                __eeupd_byte_m32u2
                0x0000000000001674                __eeupd_r18_m32u2
 .text.avr-libc
                0x0000000000001696        0xc /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_word_atmega32u2.o)
                0x0000000000001696                __eeupd_word_m32u2
 .text.avr-libc
                0x00000000000016a2       0x20 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_block_atmega32u2.o)
                0x00000000000016a2                __eerd_block_m32u2
                0x00000000000016a6                __eerd_blraw_m32u2
                0x00000000000016c2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000016c2        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
                0x00000000000016c2                exit
                0x00000000000016c2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000016c2        0x4 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000016c6                _etext = .

.data           0x0000000000800100       0x1a load address 0x00000000000016c6
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/crtm32u2.o
 .data          0x0000000000800100        0x0 sboxnet2usb.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(memset.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_byte_atmega32u2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_word_atmega32u2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_block_atmega32u2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_byte_atmega32u2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_word_atmega32u2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_block_atmega32u2.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800100       0x19 sboxnet2usb.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080011a                . = ALIGN (0x2)
 *fill*         0x0000000000800119        0x1 
                0x000000000080011a                _edata = .
                0x000000000080011a                PROVIDE (__data_end, .)

.bss            0x000000000080011a      0x246
                0x000000000080011a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080011a        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/crtm32u2.o
 .bss           0x000000000080011a        0x5 sboxnet2usb.o
                0x000000000080011a                g_timer_led_msg_write
                0x000000000080011b                g_timer_led_msg_read
                0x000000000080011c                g_timer
                0x000000000080011d                g_sboxnet_status
                0x000000000080011e                g_sboxnet_flags
 .bss           0x000000000080011f        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_exit.o)
 .bss           0x000000000080011f        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_copy_data.o)
 .bss           0x000000000080011f        0x0 /usr/lib/gcc/avr/4.9.3/avr35/libgcc.a(_clear_bss.o)
 .bss           0x000000000080011f        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(memset.o)
 .bss           0x000000000080011f        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_byte_atmega32u2.o)
 .bss           0x000000000080011f        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_word_atmega32u2.o)
 .bss           0x000000000080011f        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_block_atmega32u2.o)
 .bss           0x000000000080011f        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_byte_atmega32u2.o)
 .bss           0x000000000080011f        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eeupd_word_atmega32u2.o)
 .bss           0x000000000080011f        0x0 /usr/lib/gcc/avr/4.9.3/../../../../avr/lib/avr35/libc.a(eerd_block_atmega32u2.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080011f      0x241 sboxnet2usb.o
                0x000000000080011f                g_sboxnet_addr
                0x0000000000800120                g_sboxnet
                0x0000000000800353                g_usb_dev
                0x0000000000800360                PROVIDE (__bss_end, .)
                0x00000000000016c6                __data_load_start = LOADADDR (.data)
                0x00000000000016e0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800360        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800360                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000       0x42
 *(.eeprom*)
 .eeprom        0x0000000000810000       0x42 sboxnet2usb.o
                0x0000000000810000                eeprom
                0x0000000000810042                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2a
 *(.comment)
 .comment       0x0000000000000000       0x2a sboxnet2usb.o
                                         0x2b (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(sboxnet2usb.avr elf32-avr)
LOAD linker stubs
