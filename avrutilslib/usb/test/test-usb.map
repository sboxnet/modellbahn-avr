Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/crtusb162.o (exit)
/usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
                              test-usb.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
                              test-usb.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_byte_at90usb162.o)
                              test-usb.o (__eerd_byte_usb162)
/usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_word_at90usb162.o)
                              test-usb.o (__eerd_word_usb162)
/usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_block_at90usb162.o)
                              /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_word_at90usb162.o) (__eerd_blraw_usb162)

Allocating common symbols
Common symbol       size              file

g_usb_dev           0xb               test-usb.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00010000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/crtusb162.o
LOAD test-usb.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xb1a
 *(.vectors)
 .vectors       0x00000000       0x74 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/crtusb162.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000074       0x8b test-usb.o
                0x00000089                g_strings_P
                0x00000091                g_string3_P
                0x0000009f                g_string2_P
                0x000000b1                g_string1_P
                0x000000c9                g_string0_P
                0x000000cd                g_config_1_P
                0x000000ed                g_device_desc_P
                0x00000100                . = ALIGN (0x2)
 *fill*         0x000000ff        0x1 
                0x00000100                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000100        0x0 linker stubs
 *(.trampolines*)
                0x00000100                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000100                __ctors_start = .
 *(.ctors)
                0x00000100                __ctors_end = .
                0x00000100                __dtors_start = .
 *(.dtors)
                0x00000100                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000100        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/crtusb162.o
                0x00000100                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000100        0xc /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/crtusb162.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000010c       0x16 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
                0x0000010c                __do_copy_data
 .init4         0x00000122       0x10 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
                0x00000122                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000132        0x8 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/crtusb162.o
 *(.init9)
 *(.text)
 .text          0x0000013a        0x4 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/crtusb162.o
                0x0000013a                __vector_22
                0x0000013a                __vector_28
                0x0000013a                __vector_1
                0x0000013a                __vector_12
                0x0000013a                __bad_interrupt
                0x0000013a                __vector_6
                0x0000013a                __vector_3
                0x0000013a                __vector_23
                0x0000013a                __vector_25
                0x0000013a                __vector_13
                0x0000013a                __vector_17
                0x0000013a                __vector_19
                0x0000013a                __vector_7
                0x0000013a                __vector_27
                0x0000013a                __vector_5
                0x0000013a                __vector_4
                0x0000013a                __vector_9
                0x0000013a                __vector_2
                0x0000013a                __vector_21
                0x0000013a                __vector_15
                0x0000013a                __vector_8
                0x0000013a                __vector_26
                0x0000013a                __vector_14
                0x0000013a                __vector_10
                0x0000013a                __vector_16
                0x0000013a                __vector_20
 .text          0x0000013e      0x94e test-usb.o
                0x0000019c                logger_usart_init
                0x000001d0                ringbuf_init
                0x000001dc                ringbuf_read
                0x00000206                __vector_24
                0x0000026a                logger_usart_check
                0x00000298                ringbuf_write
                0x00000344                logger_usart_str_P
                0x00000366                logger_usart_hex_byte
                0x0000038e                logger_usart_hex_word
                0x000003a0                usb_ep_read_data
                0x000003b2                usb_mem_read_byte
                0x000003ca                usb_ep_getbufsize
                0x000003dc                usb_ep_send_in_data
                0x000004ce                usb_ep_send_control_data
                0x000005d4                usb_ep0_get_configuration
                0x000005fa                usb_ep0_get_descriptor
                0x00000728                usb_ep0_set_address
                0x00000770                usb_ep_setup
                0x000007c4                usb_ep_setup_control
                0x000007e2                usb_intr_endofreset
                0x000007f2                __vector_11
                0x0000088a                usb_init
                0x00000902                ep1_task
                0x00000954                usb_event_set_configuration
                0x00000960                usb_ep0_set_configuration
                0x000009ba                usb_ep0_task
                0x00000a66                usb_event_ep0_request
                0x00000a68                __vector_18
 .text          0x00000a8c        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
 .text          0x00000a8c        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
 .text          0x00000a8c        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
 .text          0x00000a8c        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_byte_at90usb162.o)
 .text          0x00000a8c        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_word_at90usb162.o)
 .text          0x00000a8c        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_block_at90usb162.o)
                0x00000a8c                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000a8c       0x4e test-usb.o
                0x00000a8c                main
 .text.libgcc.mul
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
 .text.libgcc   0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000ada        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000ada       0x10 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_byte_at90usb162.o)
                0x00000ada                __eerd_byte_usb162
 .text.avr-libc
                0x00000aea        0xc /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_word_at90usb162.o)
                0x00000aea                __eerd_word_usb162
 .text.avr-libc
                0x00000af6       0x20 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_block_at90usb162.o)
                0x00000af6                __eerd_block_usb162
                0x00000afa                __eerd_blraw_usb162
                0x00000b16                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000b16        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
                0x00000b16                exit
                0x00000b16                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000b16        0x4 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
 *(.fini0)
                0x00000b1a                _etext = .

.data           0x00800100       0x1c load address 0x00000b1a
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/crtusb162.o
 .data          0x00800100        0x2 test-usb.o
 .data          0x00800102        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
 .data          0x00800102        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
 .data          0x00800102        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
 .data          0x00800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_byte_at90usb162.o)
 .data          0x00800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_word_at90usb162.o)
 .data          0x00800102        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_block_at90usb162.o)
 *(.data*)
 *(.rodata)
 .rodata        0x00800102       0x19 test-usb.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080011c                . = ALIGN (0x2)
 *fill*         0x0080011b        0x1 
                0x0080011c                _edata = .
                0x0080011c                PROVIDE (__data_end, .)

.bss            0x0080011c      0x10d
                0x0080011c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080011c        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/crtusb162.o
 .bss           0x0080011c      0x102 test-usb.o
 .bss           0x0080021e        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_exit.o)
 .bss           0x0080021e        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_copy_data.o)
 .bss           0x0080021e        0x0 /usr/lib/gcc/avr/4.8.1/avr35/libgcc.a(_clear_bss.o)
 .bss           0x0080021e        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_byte_at90usb162.o)
 .bss           0x0080021e        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_word_at90usb162.o)
 .bss           0x0080021e        0x0 /usr/lib/gcc/avr/4.8.1/../../../../avr/lib/avr35/libc.a(eerd_block_at90usb162.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080021e        0xb test-usb.o
                0x0080021e                g_usb_dev
                0x00800229                PROVIDE (__bss_end, .)
                0x00000b1a                __data_load_start = LOADADDR (.data)
                0x00000b36                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800229        0x0
                0x00800229                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800229                PROVIDE (__noinit_end, .)
                0x00800229                _end = .
                0x00800229                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x234c
 *(.stab)
 .stab          0x00000000     0x234c test-usb.o

.stabstr        0x00000000     0x1d29
 *(.stabstr)
 .stabstr       0x00000000     0x1d29 test-usb.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2d
 *(.comment)
 .comment       0x00000000       0x2d test-usb.o
                                 0x2e (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(test-usb.avr elf32-avr)
LOAD linker stubs
